/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ui;

import com.dao.UserDAO;
import com.ui.LoginFrom;
import com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.util.FontUtils;
import java.util.Properties;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.util.Properties;
import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
/**
 *
 * @author PC
 */
public class RegisterFrom extends javax.swing.JFrame {
// Biến toàn cục để lưu mã xác thực
private String verificationCode;
    /**
     * Creates new form RegisterFrom
     */
    public RegisterFrom() {
        initComponents();
                setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPassword = new javax.swing.JPasswordField();
        lblHobbies = new javax.swing.JLabel();
        lblSport = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        btnGui = new javax.swing.JButton();
        lblHobbies1 = new javax.swing.JLabel();
        lblChonDN = new javax.swing.JLabel();
        lblSport1 = new javax.swing.JLabel();
        lblSport2 = new javax.swing.JLabel();
        btnDangky = new javax.swing.JButton();
        lblBackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPassword.setText("jPasswordField1");
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 380, 340, 40));

        lblHobbies.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblHobbies.setForeground(new java.awt.Color(255, 255, 255));
        lblHobbies.setText("Email");
        getContentPane().add(lblHobbies, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 190, -1, -1));

        lblSport.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblSport.setForeground(new java.awt.Color(255, 255, 255));
        lblSport.setText("Mã xác thực");
        getContentPane().add(lblSport, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 430, -1, -1));
        getContentPane().add(txtMa, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 460, 220, 40));
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 220, 340, 40));
        getContentPane().add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 300, 340, 40));

        btnGui.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGui.setForeground(new java.awt.Color(0, 255, 255));
        btnGui.setText("Gửi");
        btnGui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuiActionPerformed(evt);
            }
        });
        getContentPane().add(btnGui, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 460, 110, 40));

        lblHobbies1.setBackground(new java.awt.Color(255, 255, 255));
        lblHobbies1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblHobbies1.setForeground(new java.awt.Color(255, 255, 255));
        lblHobbies1.setText("Register");
        getContentPane().add(lblHobbies1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 130, 190, -1));

        lblChonDN.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblChonDN.setForeground(new java.awt.Color(255, 255, 255));
        lblChonDN.setText("Bạn đã có tài khoản?");
        lblChonDN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblChonDNMouseClicked(evt);
            }
        });
        getContentPane().add(lblChonDN, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 620, -1, -1));

        lblSport1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblSport1.setForeground(new java.awt.Color(255, 255, 255));
        lblSport1.setText("Username");
        getContentPane().add(lblSport1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 270, -1, -1));

        lblSport2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblSport2.setForeground(new java.awt.Color(255, 255, 255));
        lblSport2.setText("Password");
        getContentPane().add(lblSport2, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 350, -1, -1));

        btnDangky.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDangky.setForeground(new java.awt.Color(0, 255, 255));
        btnDangky.setText("Đăng ký");
        btnDangky.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangkyActionPerformed(evt);
            }
        });
        getContentPane().add(btnDangky, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 520, 340, 37));

        lblBackGround.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC\\Documents\\NetBeansProjects\\du_an_tot_nghiep\\src\\main\\java\\com\\img\\backgroundFrom.png")); // NOI18N
        getContentPane().add(lblBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuiActionPerformed
// Cấu hình thông tin server SMTP
    String host = "smtp.gmail.com";
    String port = "587";
    final String username = "binhminh51107@gmail.com"; // Thay bằng email của bạn
    final String appPassword = "hrkm xnjk iegz ewzg"; // Thay bằng mật khẩu ứng dụng của bạn

    String email = txtEmail.getText().trim();
    String userName = txtUsername.getText().trim();
    String password = txtPassword.getText().trim();

    // Kiểm tra các trường không được để trống
    if (userName.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập tên đăng nhập!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (password.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập mật khẩu!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (password.length() < 6) {
        JOptionPane.showMessageDialog(this, "Mật khẩu phải có ít nhất 6 ký tự!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (email.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập email!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Kiểm tra định dạng email hợp lệ
    if (!email.matches("^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$")) {
        JOptionPane.showMessageDialog(this, "Email không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Tạo mã xác thực ngẫu nhiên (6 chữ số)
    verificationCode = String.valueOf((int) (Math.random() * 900000) + 100000);

    // Thiết lập thuộc tính cho phiên làm việc SMTP
    Properties props = new Properties();
    props.put("mail.smtp.auth", "true");
    props.put("mail.smtp.starttls.enable", "true");
    props.put("mail.smtp.host", host);
    props.put("mail.smtp.port", port);

    // Tạo phiên làm việc với tài khoản SMTP
    Session session = Session.getInstance(props, new javax.mail.Authenticator() {
        @Override
        protected PasswordAuthentication getPasswordAuthentication() {
            return new PasswordAuthentication(username, appPassword);
        }
    });

    try {
        // Tạo email
        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress(username));
        message.setRecipient(Message.RecipientType.TO, new InternetAddress(email));

        // Thiết lập nội dung email
        message.setSubject("Mã xác thực đăng ký tài khoản");
        message.setText("Xin chào,\n\nMã xác thực của bạn là: " + verificationCode 
                + "\nVui lòng nhập mã này để hoàn tất đăng ký.");

        // Gửi email
        Transport.send(message);
        
        JOptionPane.showMessageDialog(this, "Mã xác thực đã được gửi đến email của bạn!", "Thành công", JOptionPane.INFORMATION_MESSAGE);

    } catch (MessagingException e) {
        JOptionPane.showMessageDialog(this, "Gửi email thất bại: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_btnGuiActionPerformed

    private void lblChonDNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblChonDNMouseClicked
        // TODO add your handling code here:
        LoginFrom lg = new LoginFrom();
        lg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblChonDNMouseClicked

    private void btnDangkyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangkyActionPerformed
        // TODO add your handling code here:
        String inputCode = txtMa.getText().trim(); // Lấy mã người dùng nhập
        String email = txtEmail.getText();
        String user = txtUsername.getText();
        String pass = txtPassword.getText();

    if (inputCode.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập mã xác thực!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (inputCode.equals(verificationCode)) {
        JOptionPane.showMessageDialog(this, "Xác thực thành công! Đăng ký hoàn tất.", "Thành công", JOptionPane.INFORMATION_MESSAGE);
        // Thực hiện các thao tác đăng ký tài khoản (lưu vào CSDL, chuyển trang, ...)
                UserDAO us = new UserDAO();
                us.registerUser(email, pass, user);         
    } else {
        JOptionPane.showMessageDialog(this, "Mã xác thực không đúng. Vui lòng thử lại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnDangkyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());  // Chọn giao diện FlatLaf
        } catch (UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterFrom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangky;
    private javax.swing.JButton btnGui;
    private javax.swing.JLabel lblBackGround;
    private javax.swing.JLabel lblChonDN;
    private javax.swing.JLabel lblHobbies;
    private javax.swing.JLabel lblHobbies1;
    private javax.swing.JLabel lblSport;
    private javax.swing.JLabel lblSport1;
    private javax.swing.JLabel lblSport2;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMa;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
